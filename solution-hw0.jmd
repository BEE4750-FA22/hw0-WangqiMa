---
title: "BEE 4750/5750 Homework 0"
author: "Wangqi Ma wm335"
date: `j import Dates; Dates.Date(Dates.now())`
weave_options:
  term: true
  results: tex
  cache: off
---

<!-- This setups the environment and installs packages, but doesn't appear in the generated document -->
<!-- You shouldn't need to modify this -->
```julia; echo = false; results = "hidden"
using Pkg
Pkg.activate(".")
Pkg.instantiate()
```

# Problem 1

## Problem 1.1
```julia
function square_number(x)
output = x ^ 2
return output
end
```
## Problem 1.2
We can see that $5 ^ 2$ = $`j square_number(5)`$.
## Problem 1.3
```julia
using Plots
x = range(-10,10)
y = square_number.(x)
plot(y)
```
# Problem 2

## Problem 2.1
Let's assume that $\sqrt{x}$ is less than both $x/a$ and $a$, then we will get two inequations. Solve both of them, we will get two inequations conflict with each other. If we assume $\sqrt{x}$ is larger than both of them, the same result will also show up.
## Problem 2.2
```julia
function square_root(x,t)
  a = x
  while(true)
    root = 0.5 * (a + (x/a))
    if (abs(root - a) < t)
      return root
    else
      a = root
    end
  end
end
```
We can see that the square root of $2$ is  $`j square_root(2,0.01)`$.
# Problem 3

## Problem 3.1
```julia
r = rand(Float64,20)
```
## Problem 3.2
```julia
function mean(vect)
  sum = 0
  for i in 1:length(vect)
    sum += vect[i]
    i + 1
  end
  output = sum / length(vect)
  return output
end
```
We can see that the mean value of $r$ is  $`j mean(r)`$.
```julia
function demean!(vect)
  vect_op = vect
  for i in 1 : length(vect)
    vect_op[i] -= mean(vect)
  end
  return vect_op
end
demean!(r)
```
## Problem 3.3
```julia
vector = [0,0,1,1,1,1,1,1,0,0]
```
## Problem 3.4
```julia
m = rand(Int64, (5,5))
```
# Problem 4

## Problem 4.1
```julia
Pkg.add("Distributions")
using Distributions
my_normal_dist = LogNormal(log(0.03),0.005)
yt = rand(my_normal_dist, 100)
```
## Problem 4.2
```julia
function Simulation(a,yt,b,q,T,X0)
  X1 = X0 + a + yt + ((X0 ^ Q)/(1+X0^q)) - b * X0
  X_old = X1
  for i in 1 : T
    X_new = X_old + a + yt + ((X0 ^ Q)/(1+X0^q)) - b * X0
    X_old = X_new
  return X_new
  end
end
```
## Problem 4.3
```julia
using Plots
plot(Simulation(0.4,yt,0.42,2,100,100)
```
# References